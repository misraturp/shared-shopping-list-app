{"version":3,"sources":["components/Card.js","components/shoppinglist.js","components/Input.js","containers/items.js","containers/App.js","serviceWorker.js","index.js"],"names":["Card","name","quantity","increaseClick","decreaseClick","className","type","onClick","Shoplist","listOfItems","map","item","index","key","id","quan","InputBox","inputValue","changed","addClicked","onKeyPress","onChange","value","items","App","handleChange","event","setState","inputfield","target","arr","state","new_item_name","toLowerCase","some","el","new_item_quantity","find","o","console","log","prevState","toUpperCase","slice","newItem","push","keyPressed","Input","this","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.503e2109.chunk.js","sourcesContent":["import React from 'react';\nimport './Card.css'\n\nconst Card = ({name, quantity, increaseClick, decreaseClick}) => {\n\treturn(\n\t\t<div>\n\t\t\t<div className = 'bg-yellow f3 br3 pa2 ma3 bw2 fl w-60'>\n\t\t\t\t<p> {name} - {quantity} </p>\n\t\t\t\t<div className='quan_buttons'>\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-secondary\" onClick={increaseClick}>+</button>\n\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-secondary\" onClick={decreaseClick}>-</button>\n\t\t\t\t</div>\n\n\t\t\t</div>\n\n\t        <div>\n\t        \t<button \n\t\t\t        type=\"button\" \n\t\t\t        className=\"btn btn-dark\"\n\t\t\t        >Delete</button>\n\t        </div>\n        </div>\n\t\t);\n\n}\n\nexport default Card;","import React from 'react';\nimport Card from './Card';\n\nconst Shoplist = ({listOfItems}) => {\n\treturn(\n\t\t\t<div>\n\t\t\t\t{\n\t\t\t\t\tlistOfItems.map((item, index) => {\n\t\t\t\t\t\treturn(\n\t\t\t\t\t\t\t<Card key={item.id}\n\t\t\t\t\t\t\tname={item.name}\n\t\t\t\t\t\t\tquantity={item.quan} />\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t)}\n\n\n\t\t\t</div>\n\n\t\t);\n}\n\nexport default Shoplist;\n\n\n\n\t\t\t\t\n\t\t\t","import React from 'react';\n\nconst InputBox = ({inputValue, changed, addClicked, onKeyPress}) => {\n\treturn(\n\t\t<div>\n\t\t\t<input className='ma2'\n\t\t\t\tonChange={changed} \n\t\t\t\tonKeyPress={onKeyPress}\n\t\t\t\tvalue = {inputValue}\n\t\t\t\ttype='text' /> \n\t        <button \n\t\t        type=\"button\" \n\t\t        className=\"btn btn-dark\"\n\t\t        onClick={addClicked}\n\t\t        >Add</button>\n        </div>\n\t\t)\n\n}\n\nexport default InputBox;","export const items = [\n{\n    id: 1,\n    name: 'Banana',\n    quan: 2\n  },\n  {\n    id: 2,\n    name: 'Apple',\n    quan: 5\n  },\n  {\n    id: 3,\n    name: 'Burger buns',\n    quan: 6\n  },\n  {\n    id: 4,\n    name: 'Ketchup',\n    quan: 1\n  }\n];","import React from 'react';\nimport Shoplist from '../components/shoppinglist';\nimport InputBox from '../components/Input';\nimport {items} from './items';\nimport './App.css';\n\n\nclass App extends React.Component {\n  constructor(){\n    super()\n    this.state = {\n      items: items,\n      inputfield: ''\n    }\n\n  }\n\n  handleChange = (event) => {\n    this.setState({inputfield: event.target.value});\n  }\n  \n  addClicked = () => {\n    let arr = this.state.items;\n    let new_item_name = this.state.inputfield.toLowerCase();\n\n    if(arr.some(el => el.name.toLowerCase() === new_item_name)){\n      let new_item_quantity = arr.find(o=>o.name.toLowerCase()===new_item_name).quan+1;\n      console.log(new_item_quantity)\n      this.setState(prevState => ({\n        items: prevState.items.map(\n          el => el.name.toLowerCase() === new_item_name? { ...el, quan: new_item_quantity }: el\n        )\n\n      }))\n      console.log(this.state.items)\n    }\n    else{\n      // make first letter capital before adding to array\n      new_item_name = new_item_name[0].toUpperCase()+new_item_name.slice(1); \n      let latest_id = arr.slice(-1)[0].id;\n      let newID = latest_id+1;\n      let newItem = {id: newID, name:new_item_name, quan:1}\n      arr.push(newItem)\n      this.setState({items: arr});\n    }\n    this.setState({inputfield:''});\n  }\n\n  keyPressed = (event) => {\n    if(event.key === 'Enter'){\n      this.addClicked();\n    }\n  }\n\n\n  render(){\n    return(\n        <div className='tc'>\n          <h1 className='f1'> shopping list </h1>\n          <InputBox inputValue={this.state.inputfield} addClicked = {this.addClicked} onKeyPress={this.keyPressed} changed={this.handleChange}/>\n          <Shoplist listOfItems = {this.state.items}/>\n        </div>\n\n      );\n  }\n\n}\n\nexport default App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport * as serviceWorker from './serviceWorker';\nimport 'tachyons';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}